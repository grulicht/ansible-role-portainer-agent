FROM debian:bookworm-slim

ENV DEBIAN_FRONTEND=noninteractive
ARG TARGETARCH

ENV VIRTUAL_ENV=/usr/local/lib/python3.11
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN apt-get update && \
    apt-get dist-upgrade -y && \
    apt-get install -y --no-install-recommends \
        curl \
        direnv \
        git \
        gnupg2 \
        make \
        python3 \
        python3-pip \
        python3-venv \
        rsync \
        software-properties-common \
        wget \
        expect \
        libffi-dev \
        libssl-dev \
        openssh-client \
        procps \
        python3-boto3 \
        python3-cffi \
        python3-dev \
        python3-dnspython \
        python3-netaddr \
        python3-pycodestyle \
        bash \
        yamllint

RUN python3 -m venv $VIRTUAL_ENV

RUN pip install --no-cache-dir \
        "boto==2.49.0" \
        "ansible-core>=2.10,<2.15" \
        "ansible-lint>=5.4,<7.0" \
        "ansible-merge-vars==5.0.0" \
        "PyYAML==6" \
        "yamllint<2.0" \
        "molecule==24.2.0" \
        "molecule-plugins[docker]<=23.5.0" \
        "pytest>7.0,<8.0" \
        "pytest-testinfra>=7.0,<8.0" \
        jmespath

RUN ansible-galaxy collection install \
        "community.aws" \
        "ansible.utils" \
        "ansible.posix" \
        "community.general" \
        "community.docker"

RUN curl -fsSL https://download.docker.com/linux/debian/gpg | \
        gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg && \
    echo "deb [arch=${TARGETARCH}] https://download.docker.com/linux/debian bookworm stable" | \
        tee /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io

RUN apt-get clean -y && \
    apt-get autoclean -y && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /var/lib/log/* /tmp/* /var/tmp/* /root/.ansible

CMD ["bin/bash"]
